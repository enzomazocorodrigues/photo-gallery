import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react'
import Container from '../components/common/Container'
import Header from '../components/common/Header'
import Gallery from '../components/photo/Gallery'
import Upload from '../components/photo/Upload'
import { firebaseApp } from '../firebase/firebase'
import { Photo } from '../types/photo/Photo'

const Home: NextPage = () => {
  const [gallery, setGallery] = useState<Photo[]>([]);
  const [photoFile, setPhoto] = useState<File | null>(null);
  const [uploading, setUploading] = useState<boolean>(false);

  const listGallery = async (): Promise<void> => {
    const photos = await firebaseApp.listAll();
    setGallery([...photos]);
  }

  useEffect(() => {
    const list = async () => await listGallery()
    list()
  }, [])

  const loadPhoto = (photo: File) => {
    setPhoto(photo);
  }

  const cancelPhoto = () => {
    setPhoto(null);
  }

  const uploadPhoto = async () => {
    if (photoFile) {
      setUploading(true)
      await firebaseApp.upload(photoFile);
      setUploading(false)
      setPhoto(null)
      await listGallery()
    }
  }

  const deletePhoto = async (photo: Photo) => {
    await firebaseApp.remove(photo)
    await listGallery()
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Container>
        <Upload photo={photoFile} loading={uploading} onCancel={cancelPhoto} onLoad={loadPhoto} onUpload={uploadPhoto} />
      </Container>
      <Gallery gallery={gallery} onDelete={deletePhoto} />
    </>
  )
}

export default Home
